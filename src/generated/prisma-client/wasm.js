
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  password: 'password',
  name: 'name',
  role: 'role',
  isActive: 'isActive',
  lastLogin: 'lastLogin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AttractionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  fullDescription: 'fullDescription',
  category: 'category',
  rating: 'rating',
  duration: 'duration',
  difficulty: 'difficulty',
  ticketPrice: 'ticketPrice',
  ticketPriceChild: 'ticketPriceChild',
  location: 'location',
  coordinates: 'coordinates',
  bestTime: 'bestTime',
  facilities: 'facilities',
  tips: 'tips',
  isActive: 'isActive',
  featured: 'featured',
  viewCount: 'viewCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AttractionImageScalarFieldEnum = {
  id: 'id',
  attractionId: 'attractionId',
  url: 'url',
  alt: 'alt',
  caption: 'caption',
  isPrimary: 'isPrimary',
  order: 'order',
  createdAt: 'createdAt'
};

exports.Prisma.AttractionFeatureScalarFieldEnum = {
  id: 'id',
  attractionId: 'attractionId',
  name: 'name',
  icon: 'icon',
  description: 'description'
};

exports.Prisma.GalleryImageScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  url: 'url',
  alt: 'alt',
  category: 'category',
  tags: 'tags',
  isActive: 'isActive',
  featured: 'featured',
  order: 'order',
  viewCount: 'viewCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactInfoScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  value: 'value',
  description: 'description',
  icon: 'icon',
  isActive: 'isActive',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SiteSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  type: 'type',
  category: 'category',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  attractionId: 'attractionId',
  name: 'name',
  email: 'email',
  rating: 'rating',
  title: 'title',
  content: 'content',
  isApproved: 'isApproved',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NewsletterSubscriberScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  isActive: 'isActive',
  confirmedAt: 'confirmedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookingInquiryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  message: 'message',
  visitDate: 'visitDate',
  guestCount: 'guestCount',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogPostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  excerpt: 'excerpt',
  content: 'content',
  featuredImage: 'featuredImage',
  isPublished: 'isPublished',
  publishedAt: 'publishedAt',
  tags: 'tags',
  viewCount: 'viewCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  EDITOR: 'EDITOR'
};

exports.Difficulty = exports.$Enums.Difficulty = {
  MUDAH: 'MUDAH',
  SEDANG: 'SEDANG',
  MENANTANG: 'MENANTANG'
};

exports.ContactType = exports.$Enums.ContactType = {
  PHONE: 'PHONE',
  EMAIL: 'EMAIL',
  ADDRESS: 'ADDRESS',
  SOCIAL_MEDIA: 'SOCIAL_MEDIA',
  OTHER: 'OTHER'
};

exports.SettingType = exports.$Enums.SettingType = {
  TEXT: 'TEXT',
  NUMBER: 'NUMBER',
  BOOLEAN: 'BOOLEAN',
  JSON: 'JSON',
  IMAGE: 'IMAGE'
};

exports.InquiryStatus = exports.$Enums.InquiryStatus = {
  PENDING: 'PENDING',
  CONTACTED: 'CONTACTED',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  Attraction: 'Attraction',
  AttractionImage: 'AttractionImage',
  AttractionFeature: 'AttractionFeature',
  GalleryImage: 'GalleryImage',
  ContactInfo: 'ContactInfo',
  SiteSetting: 'SiteSetting',
  Review: 'Review',
  NewsletterSubscriber: 'NewsletterSubscriber',
  BookingInquiry: 'BookingInquiry',
  BlogPost: 'BlogPost'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/fihaa/App/wisata-sumbang-bita/src/generated/prisma-client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/fihaa/App/wisata-sumbang-bita/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "PRISMA_DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma-client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"PRISMA_DATABASE_URL\")\n}\n\n// Admin table for authentication\nmodel Admin {\n  id        String    @id @default(cuid())\n  email     String    @unique\n  username  String    @unique\n  password  String\n  name      String\n  role      Role      @default(ADMIN)\n  isActive  Boolean   @default(true)\n  lastLogin DateTime?\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n\n  @@map(\"admins\")\n}\n\nenum Role {\n  SUPER_ADMIN\n  ADMIN\n  EDITOR\n}\n\n// Tourist attractions/destinations\nmodel Attraction {\n  id               String     @id @default(cuid())\n  title            String\n  slug             String     @unique\n  description      String\n  fullDescription  String?\n  category         String\n  rating           Float      @default(0)\n  duration         String\n  difficulty       Difficulty\n  ticketPrice      Int // in rupiah\n  ticketPriceChild Int? // in rupiah\n  location         String?\n  coordinates      String? // lat,lng format\n  bestTime         String?\n  facilities       String? // JSON string array\n  tips             String? // JSON string array\n  isActive         Boolean    @default(true)\n  featured         Boolean    @default(false)\n  viewCount        Int        @default(0)\n  createdAt        DateTime   @default(now())\n  updatedAt        DateTime   @updatedAt\n\n  // Relations\n  images   AttractionImage[]\n  features AttractionFeature[]\n  reviews  Review[]\n\n  @@map(\"attractions\")\n}\n\nenum Difficulty {\n  MUDAH\n  SEDANG\n  MENANTANG\n}\n\n// Attraction images\nmodel AttractionImage {\n  id           String   @id @default(cuid())\n  attractionId String\n  url          String\n  alt          String?\n  caption      String?\n  isPrimary    Boolean  @default(false)\n  order        Int      @default(0)\n  createdAt    DateTime @default(now())\n\n  attraction Attraction @relation(fields: [attractionId], references: [id], onDelete: Cascade)\n\n  @@map(\"attraction_images\")\n}\n\n// Attraction features (like \"Kolam Renang Alami\", etc.)\nmodel AttractionFeature {\n  id           String  @id @default(cuid())\n  attractionId String\n  name         String\n  icon         String?\n  description  String?\n\n  attraction Attraction @relation(fields: [attractionId], references: [id], onDelete: Cascade)\n\n  @@map(\"attraction_features\")\n}\n\n// Gallery images\nmodel GalleryImage {\n  id          String   @id @default(cuid())\n  title       String\n  description String?\n  url         String\n  alt         String?\n  category    String\n  tags        String? // JSON string array\n  isActive    Boolean  @default(true)\n  featured    Boolean  @default(false)\n  order       Int      @default(0)\n  viewCount   Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"gallery_images\")\n}\n\n// Contact information\nmodel ContactInfo {\n  id          String      @id @default(cuid())\n  type        ContactType\n  title       String\n  value       String\n  description String?\n  icon        String?\n  isActive    Boolean     @default(true)\n  order       Int         @default(0)\n  createdAt   DateTime    @default(now())\n  updatedAt   DateTime    @updatedAt\n\n  @@map(\"contact_info\")\n}\n\nenum ContactType {\n  PHONE\n  EMAIL\n  ADDRESS\n  SOCIAL_MEDIA\n  OTHER\n}\n\n// Site settings/configuration\nmodel SiteSetting {\n  id          String      @id @default(cuid())\n  key         String      @unique\n  value       String      @db.Text\n  description String?\n  type        SettingType @default(TEXT)\n  category    String      @default(\"general\")\n  isActive    Boolean     @default(true)\n  createdAt   DateTime    @default(now())\n  updatedAt   DateTime    @updatedAt\n\n  @@map(\"site_settings\")\n}\n\nenum SettingType {\n  TEXT\n  NUMBER\n  BOOLEAN\n  JSON\n  IMAGE\n}\n\n// Reviews/testimonials\nmodel Review {\n  id           String   @id @default(cuid())\n  attractionId String?\n  name         String\n  email        String?\n  rating       Float\n  title        String?\n  content      String\n  isApproved   Boolean  @default(false)\n  isActive     Boolean  @default(true)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  attraction Attraction? @relation(fields: [attractionId], references: [id], onDelete: SetNull)\n\n  @@map(\"reviews\")\n}\n\n// Newsletter subscribers\nmodel NewsletterSubscriber {\n  id          String    @id @default(cuid())\n  email       String    @unique\n  name        String?\n  isActive    Boolean   @default(true)\n  confirmedAt DateTime?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  @@map(\"newsletter_subscribers\")\n}\n\n// Booking inquiries\nmodel BookingInquiry {\n  id         String        @id @default(cuid())\n  name       String\n  email      String\n  phone      String?\n  message    String\n  visitDate  DateTime?\n  guestCount Int?\n  status     InquiryStatus @default(PENDING)\n  notes      String?\n  createdAt  DateTime      @default(now())\n  updatedAt  DateTime      @updatedAt\n\n  @@map(\"booking_inquiries\")\n}\n\nenum InquiryStatus {\n  PENDING\n  CONTACTED\n  CONFIRMED\n  CANCELLED\n  COMPLETED\n}\n\n// Blog posts (for future content marketing)\nmodel BlogPost {\n  id            String    @id @default(cuid())\n  title         String\n  slug          String    @unique\n  excerpt       String?\n  content       String\n  featuredImage String?\n  isPublished   Boolean   @default(false)\n  publishedAt   DateTime?\n  tags          String? // JSON string array\n  viewCount     Int       @default(0)\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  @@map(\"blog_posts\")\n}\n",
  "inlineSchemaHash": "5bc74e377ca15636e33aac13d99be744785b015a095c135b8286332a4cdcae0c",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"admins\"},\"Attraction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"difficulty\",\"kind\":\"enum\",\"type\":\"Difficulty\"},{\"name\":\"ticketPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticketPriceChild\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coordinates\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bestTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facilities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tips\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"AttractionImage\",\"relationName\":\"AttractionToAttractionImage\"},{\"name\":\"features\",\"kind\":\"object\",\"type\":\"AttractionFeature\",\"relationName\":\"AttractionToAttractionFeature\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"AttractionToReview\"}],\"dbName\":\"attractions\"},\"AttractionImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attractionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attraction\",\"kind\":\"object\",\"type\":\"Attraction\",\"relationName\":\"AttractionToAttractionImage\"}],\"dbName\":\"attraction_images\"},\"AttractionFeature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attractionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attraction\",\"kind\":\"object\",\"type\":\"Attraction\",\"relationName\":\"AttractionToAttractionFeature\"}],\"dbName\":\"attraction_features\"},\"GalleryImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"gallery_images\"},\"ContactInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ContactType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"contact_info\"},\"SiteSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"SettingType\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"site_settings\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attractionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attraction\",\"kind\":\"object\",\"type\":\"Attraction\",\"relationName\":\"AttractionToReview\"}],\"dbName\":\"reviews\"},\"NewsletterSubscriber\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"newsletter_subscribers\"},\"BookingInquiry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visitDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"guestCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InquiryStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"booking_inquiries\"},\"BlogPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featuredImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"blog_posts\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    PRISMA_DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['PRISMA_DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.PRISMA_DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

